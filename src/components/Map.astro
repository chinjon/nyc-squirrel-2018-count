<style>
  #map {
    min-height: 700px;
    height: 100%;
    width: 100%;
  }
</style>

<div>
  <div id="map"></div>
</div>

<script>
  import L from "leaflet";
  const response = await fetch(
    "https://data.cityofnewyork.us/resource/vfnx-vebw.geojson"
  );
  const data = await response.json();

  const geojsonMarkerOptions = {
    radius: 8,
    fillColor: "#ff7800",
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8,
  };

  const cinnamon = {
    fillColor: "#D27D2D",
  };

  const gray = {
    fillColor: "#808080",
  };

  const map = L.map("map", { preferCanvas: true })

    .fitBounds([
      [40.8011629, -73.9595132],
      [40.7609096, -73.9711599],
    ])
    .setView([40.785091, -73.968285], 14);

  L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 17,
    attribution:
      '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
  }).addTo(map);

  L.geoJSON(data, {
    pointToLayer: function (feature, latlng) {
      const furColor = feature.properties.primary_fur_color
        ? feature.properties.primary_fur_color.toLowerCase()
        : "none";
      if (furColor === "cinnamon") {
        return L.circleMarker(latlng, { ...geojsonMarkerOptions, ...cinnamon });
      } else if (furColor === "gray") {
        return L.circleMarker(latlng, { ...geojsonMarkerOptions, ...gray });
      } else if (furColor === "black") {
        return L.circleMarker(latlng, {
          ...geojsonMarkerOptions,
          ...{ fillColor: "#000000" },
        });
      } else {
        return L.circleMarker(latlng, geojsonMarkerOptions);
      }
    },
  }).addTo(map);
</script>
